{"ast":null,"code":"var _jsxFileName = \"D:\\\\AICTE-Internship-P4-Week1-main\\\\src\\\\Pages\\\\Avatar\\\\setAvatar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport spinner from \"../../assets/gg.gif\";\nimport \"./avatar.css\";\nimport { Button } from \"react-bootstrap\";\nimport { setAvatarAPI } from \"../../utils/ApiRequest.js\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\n// import Buffer from \"buffer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  uniqueNamesGenerator,\n  colors,\n  animals,\n  countries,\n  names,\n  languages\n} = require(\"unique-names-generator\");\nconst SetAvatar = () => {\n  _s();\n  const sprites = [\"adventurer\", \"micah\", \"avataaars\", \"bottts\", \"initials\", \"adventurer-neutral\", \"big-ears\", \"big-ears-neutral\", \"big-smile\", \"croodles\", \"identicon\", \"miniavs\", \"open-peeps\", \"personas\", \"pixel-art\", \"pixel-art-neutral\", \"identicon\"];\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n    theme: \"dark\"\n  };\n  const navigate = useNavigate();\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n  const [selectedSprite, setSelectedSprite] = React.useState(sprites[0]);\n  useEffect(() => {\n    if (!localStorage.getItem(\"user\")) {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  const randomName = () => {\n    let shortName = uniqueNamesGenerator({\n      dictionaries: [animals, colors, countries, names, languages],\n      // colors can be omitted here as not used\n      length: 2\n    });\n    // console.log(shortName);\n\n    return shortName;\n  };\n  const [imgURL, setImgURL] = React.useState([`https://api.dicebear.com/7.x/${sprites[0]}/svg?seed=${randomName()}`, `https://api.dicebear.com/7.x/${sprites[0]}/svg?seed=${randomName()}`, `https://api.dicebear.com/7.x/${sprites[0]}/svg?seed=${randomName()}`, `https://api.dicebear.com/7.x/${sprites[0]}/svg?seed=${randomName()}`]);\n  const handleSpriteChange = e => {\n    setSelectedSprite(() => {\n      if (e.target.value.length > 0) {\n        setLoading(true);\n        const imgData = [];\n        for (let i = 0; i < 4; i++) {\n          imgData.push(`https://api.dicebear.com/7.x/${e.target.value}/svg?seed=${randomName()}`);\n        }\n        setImgURL(imgData);\n        // console.log(imgData);\n        setLoading(false);\n      }\n      return e.target.value;\n    });\n  };\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      // console.log(user);\n\n      const {\n        data\n      } = await axios.post(`${setAvatarAPI}/${user._id}`, {\n        image: imgURL[selectedAvatar]\n      });\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        toast.success(\"Avatar selected successfully\", toastOptions);\n        navigate(\"/\");\n      } else {\n        toast.error(\"Error Setting avatar, Please Try again\", toastOptions);\n      }\n    }\n  };\n  const particlesInit = useCallback(async engine => {\n    // console.log(engine);\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    // await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        id: \"tsparticles\",\n        init: particlesInit,\n        loaded: particlesLoaded,\n        options: {\n          background: {\n            color: {\n              value: \"#000\"\n            }\n          },\n          fpsLimit: 60,\n          particles: {\n            number: {\n              value: 200,\n              density: {\n                enable: true,\n                value_area: 800\n              }\n            },\n            color: {\n              value: \"#ffcc00\"\n            },\n            shape: {\n              type: \"circle\"\n            },\n            opacity: {\n              value: 0.5,\n              random: true\n            },\n            size: {\n              value: 3,\n              random: {\n                enable: true,\n                minimumValue: 1\n              }\n            },\n            links: {\n              enable: false\n            },\n            move: {\n              enable: true,\n              speed: 2\n            },\n            life: {\n              duration: {\n                sync: false,\n                value: 3\n              },\n              count: 0,\n              delay: {\n                random: {\n                  enable: true,\n                  minimumValue: 0.5\n                },\n                value: 1\n              }\n            }\n          },\n          detectRetina: true\n        },\n        style: {\n          position: \"absolute\",\n          zIndex: -1,\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), loading === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container containerBox\",\n          h: \"100vh\",\n          style: {\n            position: \"relative\",\n            zIndex: \"2 !important\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatarBox\",\n            children: /*#__PURE__*/_jsxDEV(\"image\", {\n              src: spinner,\n              alt: \"Loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container containerBox\",\n          style: {\n            position: \"relative\",\n            zIndex: \"2 !important\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatarBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center text-white mt-5\",\n              children: \"Choose Your Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: imgURL.map((image, index) => {\n                  console.log(image);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-lg-3 col-md-6 col-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: image,\n                      alt: \"\",\n                      className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"} img-circle imgAvatar mt-5`,\n                      onClick: () => setSelectedAvatar(index),\n                      width: \"100%\",\n                      height: \"auto\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 27\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: handleSpriteChange,\n              className: \"form-select mt-5\",\n              children: sprites.map((sprite, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: sprite,\n                children: sprite\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: setProfilePicture,\n              type: \"submit\",\n              className: \"mt-5\",\n              children: \"Set as Profile Picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SetAvatar, \"X7wuF5CldRsqN5r9FF1tMtRwuV8=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nexport default SetAvatar;\nvar _c;\n$RefreshReg$(_c, \"SetAvatar\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","ToastContainer","toast","axios","spinner","Button","setAvatarAPI","Particles","loadFull","jsxDEV","_jsxDEV","Fragment","_Fragment","uniqueNamesGenerator","colors","animals","countries","names","languages","require","SetAvatar","_s","sprites","toastOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","navigate","selectedAvatar","setSelectedAvatar","loading","setLoading","selectedSprite","setSelectedSprite","localStorage","getItem","randomName","shortName","dictionaries","length","imgURL","setImgURL","handleSpriteChange","e","target","value","imgData","i","push","setProfilePicture","error","user","JSON","parse","data","post","_id","image","isSet","isAvatarImageSet","avatarImage","setItem","stringify","success","particlesInit","engine","particlesLoaded","container","children","style","overflow","id","init","loaded","options","background","color","fpsLimit","particles","number","density","enable","value_area","shape","type","opacity","random","size","minimumValue","links","move","speed","life","duration","sync","count","delay","detectRetina","zIndex","top","left","right","bottom","fileName","_jsxFileName","lineNumber","columnNumber","className","h","src","alt","map","index","console","log","onClick","width","height","onChange","sprite","_c","$RefreshReg$"],"sources":["D:/AICTE-Internship-P4-Week1-main/src/Pages/Avatar/setAvatar.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport spinner from \"../../assets/gg.gif\";\nimport \"./avatar.css\";\nimport { Button } from \"react-bootstrap\";\nimport { setAvatarAPI } from \"../../utils/ApiRequest.js\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\n// import Buffer from \"buffer\";\nconst {\n  uniqueNamesGenerator,\n  colors,\n  animals,\n  countries,\n  names,\n  languages,\n} = require(\"unique-names-generator\");\n\nconst SetAvatar = () => {\n  const sprites = [\n    \"adventurer\",\n    \"micah\",\n    \"avataaars\",\n    \"bottts\",\n    \"initials\",\n    \"adventurer-neutral\",\n    \"big-ears\",\n    \"big-ears-neutral\",\n    \"big-smile\",\n    \"croodles\",\n    \"identicon\",\n    \"miniavs\",\n    \"open-peeps\",\n    \"personas\",\n    \"pixel-art\",\n    \"pixel-art-neutral\",\n    \"identicon\",\n  ];\n\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n    theme: \"dark\",\n  };\n\n  const navigate = useNavigate();\n\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n  const [selectedSprite, setSelectedSprite] = React.useState(sprites[0]);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"user\")) {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  const randomName = () => {\n    let shortName = uniqueNamesGenerator({\n      dictionaries: [animals, colors, countries, names, languages], // colors can be omitted here as not used\n      length: 2,\n    });\n    // console.log(shortName);\n\n    return shortName;\n  };\n\n  const [imgURL, setImgURL] = React.useState([\n    `https://api.dicebear.com/7.x/${sprites[0]}/svg?seed=${randomName()}`,\n    `https://api.dicebear.com/7.x/${sprites[0]}/svg?seed=${randomName()}`,\n    `https://api.dicebear.com/7.x/${sprites[0]}/svg?seed=${randomName()}`,\n    `https://api.dicebear.com/7.x/${sprites[0]}/svg?seed=${randomName()}`,\n  ]);\n\n  const handleSpriteChange = (e) => {\n    setSelectedSprite(() => {\n      if (e.target.value.length > 0) {\n        setLoading(true);\n        const imgData = [];\n        for (let i = 0; i < 4; i++) {\n          imgData.push(\n            `https://api.dicebear.com/7.x/${\n              e.target.value\n            }/svg?seed=${randomName()}`\n          );\n        }\n\n        setImgURL(imgData);\n        // console.log(imgData);\n        setLoading(false);\n      }\n\n      return e.target.value;\n    });\n  };\n\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      // console.log(user);\n\n      const { data } = await axios.post(`${setAvatarAPI}/${user._id}`, {\n        image: imgURL[selectedAvatar],\n      });\n\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        toast.success(\"Avatar selected successfully\", toastOptions);\n        navigate(\"/\");\n      } else {\n        toast.error(\"Error Setting avatar, Please Try again\", toastOptions);\n      }\n    }\n  };\n\n  const particlesInit = useCallback(async (engine) => {\n    // console.log(engine);\n    await loadFull(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async (container) => {\n    // await console.log(container);\n  }, []);\n\n  return (\n    <>\n      <div style={{ position: \"relative\", overflow: \"hidden\" }}>\n        <Particles\n          id=\"tsparticles\"\n          init={particlesInit}\n          loaded={particlesLoaded}\n          options={{\n            background: {\n              color: {\n                value: \"#000\",\n              },\n            },\n            fpsLimit: 60,\n            particles: {\n              number: {\n                value: 200,\n                density: {\n                  enable: true,\n                  value_area: 800,\n                },\n              },\n              color: {\n                value: \"#ffcc00\",\n              },\n              shape: {\n                type: \"circle\",\n              },\n              opacity: {\n                value: 0.5,\n                random: true,\n              },\n              size: {\n                value: 3,\n                random: { enable: true, minimumValue: 1 },\n              },\n              links: {\n                enable: false,\n              },\n              move: {\n                enable: true,\n                speed: 2,\n              },\n              life: {\n                duration: {\n                  sync: false,\n                  value: 3,\n                },\n                count: 0,\n                delay: {\n                  random: {\n                    enable: true,\n                    minimumValue: 0.5,\n                  },\n                  value: 1,\n                },\n              },\n            },\n            detectRetina: true,\n          }}\n          style={{\n            position: \"absolute\",\n            zIndex: -1,\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n          }}\n        />\n\n        {loading === true ? (\n          <>\n            {/* <Container></Container> */}\n            <div\n              className=\"container containerBox\"\n              h={\"100vh\"}\n              style={{ position: \"relative\", zIndex: \"2 !important\" }}\n            >\n              <div className=\"avatarBox\">\n                <image src={spinner} alt=\"Loading\"></image>\n              </div>\n            </div>\n          </>\n        ) : (\n          <>\n            <div\n              className=\"container containerBox\"\n              style={{ position: \"relative\", zIndex: \"2 !important\" }}\n            >\n              <div className=\"avatarBox\">\n                <h1 className=\"text-center text-white mt-5\">\n                  Choose Your Avatar\n                </h1>\n                {/* <div className=\"imgBox\">\n                        \n                        {imgURL.map((image, index)=> {\n\n                            console.log(image);\n                            return(\n                                <img key={index} src={image} alt=\"\" className={`avatar ${selectedAvatar === index ? \"selected\" : \"\"} img-circle imgAvatar`} onClick={() => setSelectedAvatar(index)} width=\"250px\" height=\"250px\"/>\n                            )\n                        })}\n                            \n                        \n\n                    </div> */}\n                <div className=\"container\">\n                  <div className=\"row\">\n                    {imgURL.map((image, index) => {\n                      console.log(image);\n                      return (\n                        <div key={index} className=\"col-lg-3 col-md-6 col-6\">\n                          <img\n                            src={image}\n                            alt=\"\"\n                            className={`avatar ${\n                              selectedAvatar === index ? \"selected\" : \"\"\n                            } img-circle imgAvatar mt-5`}\n                            onClick={() => setSelectedAvatar(index)}\n                            width=\"100%\"\n                            height=\"auto\"\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                <select\n                  onChange={handleSpriteChange}\n                  className=\"form-select mt-5\"\n                >\n                  {sprites.map((sprite, index) => (\n                    <option value={sprite} key={index}>\n                      {sprite}\n                    </option>\n                  ))}\n                </select>\n                <Button\n                  onClick={setProfilePicture}\n                  type=\"submit\"\n                  className=\"mt-5\"\n                >\n                  Set as Profile Picture\n                </Button>\n              </div>\n\n              <ToastContainer />\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SetAvatar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}